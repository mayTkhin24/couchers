/**
 * @fileoverview gRPC-Web generated client stub for org.couchers.admin
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v5.26.1
// source: admin.proto


/* eslint-disable */
// @ts-nocheck



const grpc = {};
grpc.web = require('grpc-web');


var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js')

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js')

var annotations_pb = require('./annotations_pb.js')

var api_pb = require('./api_pb.js')

var communities_pb = require('./communities_pb.js')
const proto = {};
proto.org = {};
proto.org.couchers = {};
proto.org.couchers.admin = require('./admin_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.org.couchers.admin.AdminClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'binary';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.org.couchers.admin.AdminPromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'binary';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.org.couchers.admin.GetUserDetailsReq,
 *   !proto.org.couchers.admin.UserDetails>}
 */
const methodDescriptor_Admin_GetUserDetails = new grpc.web.MethodDescriptor(
  '/org.couchers.admin.Admin/GetUserDetails',
  grpc.web.MethodType.UNARY,
  proto.org.couchers.admin.GetUserDetailsReq,
  proto.org.couchers.admin.UserDetails,
  /**
   * @param {!proto.org.couchers.admin.GetUserDetailsReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.org.couchers.admin.UserDetails.deserializeBinary
);


/**
 * @param {!proto.org.couchers.admin.GetUserDetailsReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.org.couchers.admin.UserDetails)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.org.couchers.admin.UserDetails>|undefined}
 *     The XHR Node Readable Stream
 */
proto.org.couchers.admin.AdminClient.prototype.getUserDetails =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/org.couchers.admin.Admin/GetUserDetails',
      request,
      metadata || {},
      methodDescriptor_Admin_GetUserDetails,
      callback);
};


/**
 * @param {!proto.org.couchers.admin.GetUserDetailsReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.org.couchers.admin.UserDetails>}
 *     Promise that resolves to the response
 */
proto.org.couchers.admin.AdminPromiseClient.prototype.getUserDetails =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/org.couchers.admin.Admin/GetUserDetails',
      request,
      metadata || {},
      methodDescriptor_Admin_GetUserDetails);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.org.couchers.admin.GetUserReq,
 *   !proto.org.couchers.api.core.User>}
 */
const methodDescriptor_Admin_GetUser = new grpc.web.MethodDescriptor(
  '/org.couchers.admin.Admin/GetUser',
  grpc.web.MethodType.UNARY,
  proto.org.couchers.admin.GetUserReq,
  api_pb.User,
  /**
   * @param {!proto.org.couchers.admin.GetUserReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  api_pb.User.deserializeBinary
);


/**
 * @param {!proto.org.couchers.admin.GetUserReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.org.couchers.api.core.User)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.org.couchers.api.core.User>|undefined}
 *     The XHR Node Readable Stream
 */
proto.org.couchers.admin.AdminClient.prototype.getUser =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/org.couchers.admin.Admin/GetUser',
      request,
      metadata || {},
      methodDescriptor_Admin_GetUser,
      callback);
};


/**
 * @param {!proto.org.couchers.admin.GetUserReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.org.couchers.api.core.User>}
 *     Promise that resolves to the response
 */
proto.org.couchers.admin.AdminPromiseClient.prototype.getUser =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/org.couchers.admin.Admin/GetUser',
      request,
      metadata || {},
      methodDescriptor_Admin_GetUser);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.org.couchers.admin.ChangeUserGenderReq,
 *   !proto.org.couchers.admin.UserDetails>}
 */
const methodDescriptor_Admin_ChangeUserGender = new grpc.web.MethodDescriptor(
  '/org.couchers.admin.Admin/ChangeUserGender',
  grpc.web.MethodType.UNARY,
  proto.org.couchers.admin.ChangeUserGenderReq,
  proto.org.couchers.admin.UserDetails,
  /**
   * @param {!proto.org.couchers.admin.ChangeUserGenderReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.org.couchers.admin.UserDetails.deserializeBinary
);


/**
 * @param {!proto.org.couchers.admin.ChangeUserGenderReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.org.couchers.admin.UserDetails)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.org.couchers.admin.UserDetails>|undefined}
 *     The XHR Node Readable Stream
 */
proto.org.couchers.admin.AdminClient.prototype.changeUserGender =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/org.couchers.admin.Admin/ChangeUserGender',
      request,
      metadata || {},
      methodDescriptor_Admin_ChangeUserGender,
      callback);
};


/**
 * @param {!proto.org.couchers.admin.ChangeUserGenderReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.org.couchers.admin.UserDetails>}
 *     Promise that resolves to the response
 */
proto.org.couchers.admin.AdminPromiseClient.prototype.changeUserGender =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/org.couchers.admin.Admin/ChangeUserGender',
      request,
      metadata || {},
      methodDescriptor_Admin_ChangeUserGender);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.org.couchers.admin.ChangeUserBirthdateReq,
 *   !proto.org.couchers.admin.UserDetails>}
 */
const methodDescriptor_Admin_ChangeUserBirthdate = new grpc.web.MethodDescriptor(
  '/org.couchers.admin.Admin/ChangeUserBirthdate',
  grpc.web.MethodType.UNARY,
  proto.org.couchers.admin.ChangeUserBirthdateReq,
  proto.org.couchers.admin.UserDetails,
  /**
   * @param {!proto.org.couchers.admin.ChangeUserBirthdateReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.org.couchers.admin.UserDetails.deserializeBinary
);


/**
 * @param {!proto.org.couchers.admin.ChangeUserBirthdateReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.org.couchers.admin.UserDetails)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.org.couchers.admin.UserDetails>|undefined}
 *     The XHR Node Readable Stream
 */
proto.org.couchers.admin.AdminClient.prototype.changeUserBirthdate =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/org.couchers.admin.Admin/ChangeUserBirthdate',
      request,
      metadata || {},
      methodDescriptor_Admin_ChangeUserBirthdate,
      callback);
};


/**
 * @param {!proto.org.couchers.admin.ChangeUserBirthdateReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.org.couchers.admin.UserDetails>}
 *     Promise that resolves to the response
 */
proto.org.couchers.admin.AdminPromiseClient.prototype.changeUserBirthdate =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/org.couchers.admin.Admin/ChangeUserBirthdate',
      request,
      metadata || {},
      methodDescriptor_Admin_ChangeUserBirthdate);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.org.couchers.admin.AddBadgeReq,
 *   !proto.org.couchers.admin.UserDetails>}
 */
const methodDescriptor_Admin_AddBadge = new grpc.web.MethodDescriptor(
  '/org.couchers.admin.Admin/AddBadge',
  grpc.web.MethodType.UNARY,
  proto.org.couchers.admin.AddBadgeReq,
  proto.org.couchers.admin.UserDetails,
  /**
   * @param {!proto.org.couchers.admin.AddBadgeReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.org.couchers.admin.UserDetails.deserializeBinary
);


/**
 * @param {!proto.org.couchers.admin.AddBadgeReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.org.couchers.admin.UserDetails)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.org.couchers.admin.UserDetails>|undefined}
 *     The XHR Node Readable Stream
 */
proto.org.couchers.admin.AdminClient.prototype.addBadge =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/org.couchers.admin.Admin/AddBadge',
      request,
      metadata || {},
      methodDescriptor_Admin_AddBadge,
      callback);
};


/**
 * @param {!proto.org.couchers.admin.AddBadgeReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.org.couchers.admin.UserDetails>}
 *     Promise that resolves to the response
 */
proto.org.couchers.admin.AdminPromiseClient.prototype.addBadge =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/org.couchers.admin.Admin/AddBadge',
      request,
      metadata || {},
      methodDescriptor_Admin_AddBadge);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.org.couchers.admin.RemoveBadgeReq,
 *   !proto.org.couchers.admin.UserDetails>}
 */
const methodDescriptor_Admin_RemoveBadge = new grpc.web.MethodDescriptor(
  '/org.couchers.admin.Admin/RemoveBadge',
  grpc.web.MethodType.UNARY,
  proto.org.couchers.admin.RemoveBadgeReq,
  proto.org.couchers.admin.UserDetails,
  /**
   * @param {!proto.org.couchers.admin.RemoveBadgeReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.org.couchers.admin.UserDetails.deserializeBinary
);


/**
 * @param {!proto.org.couchers.admin.RemoveBadgeReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.org.couchers.admin.UserDetails)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.org.couchers.admin.UserDetails>|undefined}
 *     The XHR Node Readable Stream
 */
proto.org.couchers.admin.AdminClient.prototype.removeBadge =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/org.couchers.admin.Admin/RemoveBadge',
      request,
      metadata || {},
      methodDescriptor_Admin_RemoveBadge,
      callback);
};


/**
 * @param {!proto.org.couchers.admin.RemoveBadgeReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.org.couchers.admin.UserDetails>}
 *     Promise that resolves to the response
 */
proto.org.couchers.admin.AdminPromiseClient.prototype.removeBadge =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/org.couchers.admin.Admin/RemoveBadge',
      request,
      metadata || {},
      methodDescriptor_Admin_RemoveBadge);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.org.couchers.admin.SetPassportSexGenderExceptionReq,
 *   !proto.org.couchers.admin.UserDetails>}
 */
const methodDescriptor_Admin_SetPassportSexGenderException = new grpc.web.MethodDescriptor(
  '/org.couchers.admin.Admin/SetPassportSexGenderException',
  grpc.web.MethodType.UNARY,
  proto.org.couchers.admin.SetPassportSexGenderExceptionReq,
  proto.org.couchers.admin.UserDetails,
  /**
   * @param {!proto.org.couchers.admin.SetPassportSexGenderExceptionReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.org.couchers.admin.UserDetails.deserializeBinary
);


/**
 * @param {!proto.org.couchers.admin.SetPassportSexGenderExceptionReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.org.couchers.admin.UserDetails)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.org.couchers.admin.UserDetails>|undefined}
 *     The XHR Node Readable Stream
 */
proto.org.couchers.admin.AdminClient.prototype.setPassportSexGenderException =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/org.couchers.admin.Admin/SetPassportSexGenderException',
      request,
      metadata || {},
      methodDescriptor_Admin_SetPassportSexGenderException,
      callback);
};


/**
 * @param {!proto.org.couchers.admin.SetPassportSexGenderExceptionReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.org.couchers.admin.UserDetails>}
 *     Promise that resolves to the response
 */
proto.org.couchers.admin.AdminPromiseClient.prototype.setPassportSexGenderException =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/org.couchers.admin.Admin/SetPassportSexGenderException',
      request,
      metadata || {},
      methodDescriptor_Admin_SetPassportSexGenderException);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.org.couchers.admin.BanUserReq,
 *   !proto.org.couchers.admin.UserDetails>}
 */
const methodDescriptor_Admin_BanUser = new grpc.web.MethodDescriptor(
  '/org.couchers.admin.Admin/BanUser',
  grpc.web.MethodType.UNARY,
  proto.org.couchers.admin.BanUserReq,
  proto.org.couchers.admin.UserDetails,
  /**
   * @param {!proto.org.couchers.admin.BanUserReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.org.couchers.admin.UserDetails.deserializeBinary
);


/**
 * @param {!proto.org.couchers.admin.BanUserReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.org.couchers.admin.UserDetails)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.org.couchers.admin.UserDetails>|undefined}
 *     The XHR Node Readable Stream
 */
proto.org.couchers.admin.AdminClient.prototype.banUser =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/org.couchers.admin.Admin/BanUser',
      request,
      metadata || {},
      methodDescriptor_Admin_BanUser,
      callback);
};


/**
 * @param {!proto.org.couchers.admin.BanUserReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.org.couchers.admin.UserDetails>}
 *     Promise that resolves to the response
 */
proto.org.couchers.admin.AdminPromiseClient.prototype.banUser =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/org.couchers.admin.Admin/BanUser',
      request,
      metadata || {},
      methodDescriptor_Admin_BanUser);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.org.couchers.admin.UnbanUserReq,
 *   !proto.org.couchers.admin.UserDetails>}
 */
const methodDescriptor_Admin_UnbanUser = new grpc.web.MethodDescriptor(
  '/org.couchers.admin.Admin/UnbanUser',
  grpc.web.MethodType.UNARY,
  proto.org.couchers.admin.UnbanUserReq,
  proto.org.couchers.admin.UserDetails,
  /**
   * @param {!proto.org.couchers.admin.UnbanUserReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.org.couchers.admin.UserDetails.deserializeBinary
);


/**
 * @param {!proto.org.couchers.admin.UnbanUserReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.org.couchers.admin.UserDetails)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.org.couchers.admin.UserDetails>|undefined}
 *     The XHR Node Readable Stream
 */
proto.org.couchers.admin.AdminClient.prototype.unbanUser =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/org.couchers.admin.Admin/UnbanUser',
      request,
      metadata || {},
      methodDescriptor_Admin_UnbanUser,
      callback);
};


/**
 * @param {!proto.org.couchers.admin.UnbanUserReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.org.couchers.admin.UserDetails>}
 *     Promise that resolves to the response
 */
proto.org.couchers.admin.AdminPromiseClient.prototype.unbanUser =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/org.couchers.admin.Admin/UnbanUser',
      request,
      metadata || {},
      methodDescriptor_Admin_UnbanUser);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.org.couchers.admin.AddAdminNoteReq,
 *   !proto.org.couchers.admin.UserDetails>}
 */
const methodDescriptor_Admin_AddAdminNote = new grpc.web.MethodDescriptor(
  '/org.couchers.admin.Admin/AddAdminNote',
  grpc.web.MethodType.UNARY,
  proto.org.couchers.admin.AddAdminNoteReq,
  proto.org.couchers.admin.UserDetails,
  /**
   * @param {!proto.org.couchers.admin.AddAdminNoteReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.org.couchers.admin.UserDetails.deserializeBinary
);


/**
 * @param {!proto.org.couchers.admin.AddAdminNoteReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.org.couchers.admin.UserDetails)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.org.couchers.admin.UserDetails>|undefined}
 *     The XHR Node Readable Stream
 */
proto.org.couchers.admin.AdminClient.prototype.addAdminNote =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/org.couchers.admin.Admin/AddAdminNote',
      request,
      metadata || {},
      methodDescriptor_Admin_AddAdminNote,
      callback);
};


/**
 * @param {!proto.org.couchers.admin.AddAdminNoteReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.org.couchers.admin.UserDetails>}
 *     Promise that resolves to the response
 */
proto.org.couchers.admin.AdminPromiseClient.prototype.addAdminNote =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/org.couchers.admin.Admin/AddAdminNote',
      request,
      metadata || {},
      methodDescriptor_Admin_AddAdminNote);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.org.couchers.admin.GetContentReportReq,
 *   !proto.org.couchers.admin.GetContentReportRes>}
 */
const methodDescriptor_Admin_GetContentReport = new grpc.web.MethodDescriptor(
  '/org.couchers.admin.Admin/GetContentReport',
  grpc.web.MethodType.UNARY,
  proto.org.couchers.admin.GetContentReportReq,
  proto.org.couchers.admin.GetContentReportRes,
  /**
   * @param {!proto.org.couchers.admin.GetContentReportReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.org.couchers.admin.GetContentReportRes.deserializeBinary
);


/**
 * @param {!proto.org.couchers.admin.GetContentReportReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.org.couchers.admin.GetContentReportRes)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.org.couchers.admin.GetContentReportRes>|undefined}
 *     The XHR Node Readable Stream
 */
proto.org.couchers.admin.AdminClient.prototype.getContentReport =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/org.couchers.admin.Admin/GetContentReport',
      request,
      metadata || {},
      methodDescriptor_Admin_GetContentReport,
      callback);
};


/**
 * @param {!proto.org.couchers.admin.GetContentReportReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.org.couchers.admin.GetContentReportRes>}
 *     Promise that resolves to the response
 */
proto.org.couchers.admin.AdminPromiseClient.prototype.getContentReport =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/org.couchers.admin.Admin/GetContentReport',
      request,
      metadata || {},
      methodDescriptor_Admin_GetContentReport);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.org.couchers.admin.GetContentReportsForAuthorReq,
 *   !proto.org.couchers.admin.GetContentReportsForAuthorRes>}
 */
const methodDescriptor_Admin_GetContentReportsForAuthor = new grpc.web.MethodDescriptor(
  '/org.couchers.admin.Admin/GetContentReportsForAuthor',
  grpc.web.MethodType.UNARY,
  proto.org.couchers.admin.GetContentReportsForAuthorReq,
  proto.org.couchers.admin.GetContentReportsForAuthorRes,
  /**
   * @param {!proto.org.couchers.admin.GetContentReportsForAuthorReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.org.couchers.admin.GetContentReportsForAuthorRes.deserializeBinary
);


/**
 * @param {!proto.org.couchers.admin.GetContentReportsForAuthorReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.org.couchers.admin.GetContentReportsForAuthorRes)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.org.couchers.admin.GetContentReportsForAuthorRes>|undefined}
 *     The XHR Node Readable Stream
 */
proto.org.couchers.admin.AdminClient.prototype.getContentReportsForAuthor =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/org.couchers.admin.Admin/GetContentReportsForAuthor',
      request,
      metadata || {},
      methodDescriptor_Admin_GetContentReportsForAuthor,
      callback);
};


/**
 * @param {!proto.org.couchers.admin.GetContentReportsForAuthorReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.org.couchers.admin.GetContentReportsForAuthorRes>}
 *     Promise that resolves to the response
 */
proto.org.couchers.admin.AdminPromiseClient.prototype.getContentReportsForAuthor =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/org.couchers.admin.Admin/GetContentReportsForAuthor',
      request,
      metadata || {},
      methodDescriptor_Admin_GetContentReportsForAuthor);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.org.couchers.admin.SendModNoteReq,
 *   !proto.org.couchers.admin.UserDetails>}
 */
const methodDescriptor_Admin_SendModNote = new grpc.web.MethodDescriptor(
  '/org.couchers.admin.Admin/SendModNote',
  grpc.web.MethodType.UNARY,
  proto.org.couchers.admin.SendModNoteReq,
  proto.org.couchers.admin.UserDetails,
  /**
   * @param {!proto.org.couchers.admin.SendModNoteReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.org.couchers.admin.UserDetails.deserializeBinary
);


/**
 * @param {!proto.org.couchers.admin.SendModNoteReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.org.couchers.admin.UserDetails)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.org.couchers.admin.UserDetails>|undefined}
 *     The XHR Node Readable Stream
 */
proto.org.couchers.admin.AdminClient.prototype.sendModNote =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/org.couchers.admin.Admin/SendModNote',
      request,
      metadata || {},
      methodDescriptor_Admin_SendModNote,
      callback);
};


/**
 * @param {!proto.org.couchers.admin.SendModNoteReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.org.couchers.admin.UserDetails>}
 *     Promise that resolves to the response
 */
proto.org.couchers.admin.AdminPromiseClient.prototype.sendModNote =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/org.couchers.admin.Admin/SendModNote',
      request,
      metadata || {},
      methodDescriptor_Admin_SendModNote);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.org.couchers.admin.DeleteUserReq,
 *   !proto.org.couchers.admin.UserDetails>}
 */
const methodDescriptor_Admin_DeleteUser = new grpc.web.MethodDescriptor(
  '/org.couchers.admin.Admin/DeleteUser',
  grpc.web.MethodType.UNARY,
  proto.org.couchers.admin.DeleteUserReq,
  proto.org.couchers.admin.UserDetails,
  /**
   * @param {!proto.org.couchers.admin.DeleteUserReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.org.couchers.admin.UserDetails.deserializeBinary
);


/**
 * @param {!proto.org.couchers.admin.DeleteUserReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.org.couchers.admin.UserDetails)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.org.couchers.admin.UserDetails>|undefined}
 *     The XHR Node Readable Stream
 */
proto.org.couchers.admin.AdminClient.prototype.deleteUser =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/org.couchers.admin.Admin/DeleteUser',
      request,
      metadata || {},
      methodDescriptor_Admin_DeleteUser,
      callback);
};


/**
 * @param {!proto.org.couchers.admin.DeleteUserReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.org.couchers.admin.UserDetails>}
 *     Promise that resolves to the response
 */
proto.org.couchers.admin.AdminPromiseClient.prototype.deleteUser =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/org.couchers.admin.Admin/DeleteUser',
      request,
      metadata || {},
      methodDescriptor_Admin_DeleteUser);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.org.couchers.admin.RecoverDeletedUserReq,
 *   !proto.org.couchers.admin.UserDetails>}
 */
const methodDescriptor_Admin_RecoverDeletedUser = new grpc.web.MethodDescriptor(
  '/org.couchers.admin.Admin/RecoverDeletedUser',
  grpc.web.MethodType.UNARY,
  proto.org.couchers.admin.RecoverDeletedUserReq,
  proto.org.couchers.admin.UserDetails,
  /**
   * @param {!proto.org.couchers.admin.RecoverDeletedUserReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.org.couchers.admin.UserDetails.deserializeBinary
);


/**
 * @param {!proto.org.couchers.admin.RecoverDeletedUserReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.org.couchers.admin.UserDetails)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.org.couchers.admin.UserDetails>|undefined}
 *     The XHR Node Readable Stream
 */
proto.org.couchers.admin.AdminClient.prototype.recoverDeletedUser =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/org.couchers.admin.Admin/RecoverDeletedUser',
      request,
      metadata || {},
      methodDescriptor_Admin_RecoverDeletedUser,
      callback);
};


/**
 * @param {!proto.org.couchers.admin.RecoverDeletedUserReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.org.couchers.admin.UserDetails>}
 *     Promise that resolves to the response
 */
proto.org.couchers.admin.AdminPromiseClient.prototype.recoverDeletedUser =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/org.couchers.admin.Admin/RecoverDeletedUser',
      request,
      metadata || {},
      methodDescriptor_Admin_RecoverDeletedUser);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.org.couchers.admin.CreateApiKeyReq,
 *   !proto.org.couchers.admin.CreateApiKeyRes>}
 */
const methodDescriptor_Admin_CreateApiKey = new grpc.web.MethodDescriptor(
  '/org.couchers.admin.Admin/CreateApiKey',
  grpc.web.MethodType.UNARY,
  proto.org.couchers.admin.CreateApiKeyReq,
  proto.org.couchers.admin.CreateApiKeyRes,
  /**
   * @param {!proto.org.couchers.admin.CreateApiKeyReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.org.couchers.admin.CreateApiKeyRes.deserializeBinary
);


/**
 * @param {!proto.org.couchers.admin.CreateApiKeyReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.org.couchers.admin.CreateApiKeyRes)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.org.couchers.admin.CreateApiKeyRes>|undefined}
 *     The XHR Node Readable Stream
 */
proto.org.couchers.admin.AdminClient.prototype.createApiKey =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/org.couchers.admin.Admin/CreateApiKey',
      request,
      metadata || {},
      methodDescriptor_Admin_CreateApiKey,
      callback);
};


/**
 * @param {!proto.org.couchers.admin.CreateApiKeyReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.org.couchers.admin.CreateApiKeyRes>}
 *     Promise that resolves to the response
 */
proto.org.couchers.admin.AdminPromiseClient.prototype.createApiKey =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/org.couchers.admin.Admin/CreateApiKey',
      request,
      metadata || {},
      methodDescriptor_Admin_CreateApiKey);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.org.couchers.admin.CreateCommunityReq,
 *   !proto.org.couchers.api.communities.Community>}
 */
const methodDescriptor_Admin_CreateCommunity = new grpc.web.MethodDescriptor(
  '/org.couchers.admin.Admin/CreateCommunity',
  grpc.web.MethodType.UNARY,
  proto.org.couchers.admin.CreateCommunityReq,
  communities_pb.Community,
  /**
   * @param {!proto.org.couchers.admin.CreateCommunityReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  communities_pb.Community.deserializeBinary
);


/**
 * @param {!proto.org.couchers.admin.CreateCommunityReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.org.couchers.api.communities.Community)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.org.couchers.api.communities.Community>|undefined}
 *     The XHR Node Readable Stream
 */
proto.org.couchers.admin.AdminClient.prototype.createCommunity =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/org.couchers.admin.Admin/CreateCommunity',
      request,
      metadata || {},
      methodDescriptor_Admin_CreateCommunity,
      callback);
};


/**
 * @param {!proto.org.couchers.admin.CreateCommunityReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.org.couchers.api.communities.Community>}
 *     Promise that resolves to the response
 */
proto.org.couchers.admin.AdminPromiseClient.prototype.createCommunity =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/org.couchers.admin.Admin/CreateCommunity',
      request,
      metadata || {},
      methodDescriptor_Admin_CreateCommunity);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.org.couchers.admin.GetChatsReq,
 *   !proto.org.couchers.admin.GetChatsRes>}
 */
const methodDescriptor_Admin_GetChats = new grpc.web.MethodDescriptor(
  '/org.couchers.admin.Admin/GetChats',
  grpc.web.MethodType.UNARY,
  proto.org.couchers.admin.GetChatsReq,
  proto.org.couchers.admin.GetChatsRes,
  /**
   * @param {!proto.org.couchers.admin.GetChatsReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.org.couchers.admin.GetChatsRes.deserializeBinary
);


/**
 * @param {!proto.org.couchers.admin.GetChatsReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.org.couchers.admin.GetChatsRes)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.org.couchers.admin.GetChatsRes>|undefined}
 *     The XHR Node Readable Stream
 */
proto.org.couchers.admin.AdminClient.prototype.getChats =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/org.couchers.admin.Admin/GetChats',
      request,
      metadata || {},
      methodDescriptor_Admin_GetChats,
      callback);
};


/**
 * @param {!proto.org.couchers.admin.GetChatsReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.org.couchers.admin.GetChatsRes>}
 *     Promise that resolves to the response
 */
proto.org.couchers.admin.AdminPromiseClient.prototype.getChats =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/org.couchers.admin.Admin/GetChats',
      request,
      metadata || {},
      methodDescriptor_Admin_GetChats);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.org.couchers.admin.ListEventCommunityInviteRequestsReq,
 *   !proto.org.couchers.admin.ListEventCommunityInviteRequestsRes>}
 */
const methodDescriptor_Admin_ListEventCommunityInviteRequests = new grpc.web.MethodDescriptor(
  '/org.couchers.admin.Admin/ListEventCommunityInviteRequests',
  grpc.web.MethodType.UNARY,
  proto.org.couchers.admin.ListEventCommunityInviteRequestsReq,
  proto.org.couchers.admin.ListEventCommunityInviteRequestsRes,
  /**
   * @param {!proto.org.couchers.admin.ListEventCommunityInviteRequestsReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.org.couchers.admin.ListEventCommunityInviteRequestsRes.deserializeBinary
);


/**
 * @param {!proto.org.couchers.admin.ListEventCommunityInviteRequestsReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.org.couchers.admin.ListEventCommunityInviteRequestsRes)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.org.couchers.admin.ListEventCommunityInviteRequestsRes>|undefined}
 *     The XHR Node Readable Stream
 */
proto.org.couchers.admin.AdminClient.prototype.listEventCommunityInviteRequests =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/org.couchers.admin.Admin/ListEventCommunityInviteRequests',
      request,
      metadata || {},
      methodDescriptor_Admin_ListEventCommunityInviteRequests,
      callback);
};


/**
 * @param {!proto.org.couchers.admin.ListEventCommunityInviteRequestsReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.org.couchers.admin.ListEventCommunityInviteRequestsRes>}
 *     Promise that resolves to the response
 */
proto.org.couchers.admin.AdminPromiseClient.prototype.listEventCommunityInviteRequests =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/org.couchers.admin.Admin/ListEventCommunityInviteRequests',
      request,
      metadata || {},
      methodDescriptor_Admin_ListEventCommunityInviteRequests);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.org.couchers.admin.DecideEventCommunityInviteRequestReq,
 *   !proto.org.couchers.admin.DecideEventCommunityInviteRequestRes>}
 */
const methodDescriptor_Admin_DecideEventCommunityInviteRequest = new grpc.web.MethodDescriptor(
  '/org.couchers.admin.Admin/DecideEventCommunityInviteRequest',
  grpc.web.MethodType.UNARY,
  proto.org.couchers.admin.DecideEventCommunityInviteRequestReq,
  proto.org.couchers.admin.DecideEventCommunityInviteRequestRes,
  /**
   * @param {!proto.org.couchers.admin.DecideEventCommunityInviteRequestReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.org.couchers.admin.DecideEventCommunityInviteRequestRes.deserializeBinary
);


/**
 * @param {!proto.org.couchers.admin.DecideEventCommunityInviteRequestReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.org.couchers.admin.DecideEventCommunityInviteRequestRes)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.org.couchers.admin.DecideEventCommunityInviteRequestRes>|undefined}
 *     The XHR Node Readable Stream
 */
proto.org.couchers.admin.AdminClient.prototype.decideEventCommunityInviteRequest =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/org.couchers.admin.Admin/DecideEventCommunityInviteRequest',
      request,
      metadata || {},
      methodDescriptor_Admin_DecideEventCommunityInviteRequest,
      callback);
};


/**
 * @param {!proto.org.couchers.admin.DecideEventCommunityInviteRequestReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.org.couchers.admin.DecideEventCommunityInviteRequestRes>}
 *     Promise that resolves to the response
 */
proto.org.couchers.admin.AdminPromiseClient.prototype.decideEventCommunityInviteRequest =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/org.couchers.admin.Admin/DecideEventCommunityInviteRequest',
      request,
      metadata || {},
      methodDescriptor_Admin_DecideEventCommunityInviteRequest);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.org.couchers.admin.DeleteEventReq,
 *   !proto.google.protobuf.Empty>}
 */
const methodDescriptor_Admin_DeleteEvent = new grpc.web.MethodDescriptor(
  '/org.couchers.admin.Admin/DeleteEvent',
  grpc.web.MethodType.UNARY,
  proto.org.couchers.admin.DeleteEventReq,
  google_protobuf_empty_pb.Empty,
  /**
   * @param {!proto.org.couchers.admin.DeleteEventReq} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  google_protobuf_empty_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.org.couchers.admin.DeleteEventReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.google.protobuf.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.google.protobuf.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.org.couchers.admin.AdminClient.prototype.deleteEvent =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/org.couchers.admin.Admin/DeleteEvent',
      request,
      metadata || {},
      methodDescriptor_Admin_DeleteEvent,
      callback);
};


/**
 * @param {!proto.org.couchers.admin.DeleteEventReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.google.protobuf.Empty>}
 *     Promise that resolves to the response
 */
proto.org.couchers.admin.AdminPromiseClient.prototype.deleteEvent =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/org.couchers.admin.Admin/DeleteEvent',
      request,
      metadata || {},
      methodDescriptor_Admin_DeleteEvent);
};


module.exports = proto.org.couchers.admin;

